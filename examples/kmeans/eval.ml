open Point

(* TODO read answers from argument file *)

let answers = [|
  {x=5.444892 ; y=39.749729}
; {x=8.495469 ; y=21.603205}
; {x=8.841285 ; y=7.017697}
; {x=17.432630 ; y=44.544186}
; {x=19.300748 ; y=31.108525}
; {x=25.832366 ; y=8.147831}
; {x=31.497561 ; y=23.431267}
; {x=32.570240 ; y=42.750658}
; {x=42.960841 ; y=10.742334}
; {x=44.359576 ; y=36.051218}
; {x=5.787768 ; y=9.054098}
; {x=8.352111 ; y=42.151406}
; {x=8.694423 ; y=25.949749}
; {x=18.020182 ; y=8.367672}
; {x=25.010244 ; y=40.985776}
; {x=25.227046 ; y=24.077679}
; {x=30.926263 ; y=8.101820}
; {x=41.632555 ; y=42.147053}
; {x=41.683033 ; y=25.705347}
; {x=43.720555 ; y=8.693621}
; {x=7.461435 ; y=8.265798}
; {x=7.755870 ; y=24.203830}
; {x=8.307605 ; y=42.101900}
; {x=20.565618 ; y=32.006728}
; {x=23.032033 ; y=7.200418}
; {x=27.537414 ; y=20.457983}
; {x=27.617503 ; y=42.800248}
; {x=41.274079 ; y=7.927242}
; {x=42.030069 ; y=25.141419}
; {x=42.724546 ; y=41.350711}
; {x=7.152702 ; y=25.159362}
; {x=8.526894 ; y=41.925214}
; {x=8.529917 ; y=8.403238}
; {x=22.788960 ; y=24.330183}
; {x=24.835294 ; y=41.106037}
; {x=25.356516 ; y=7.761928}
; {x=39.898161 ; y=19.330477}
; {x=41.174948 ; y=31.577466}
; {x=41.344261 ; y=44.062965}
; {x=42.364374 ; y=6.627950}
; {x=6.481212 ; y=14.159594}
; {x=8.446037 ; y=28.614632}
; {x=9.189380 ; y=42.990234}
; {x=14.335761 ; y=4.751861}
; {x=24.925718 ; y=14.987721}
; {x=25.745417 ; y=30.087742}
; {x=27.040816 ; y=43.784605}
; {x=39.515195 ; y=6.296917}
; {x=42.153493 ; y=21.803413}
; {x=42.651303 ; y=40.052017}
; {x=7.483028 ; y=42.151583}
; {x=8.075239 ; y=7.621742}
; {x=8.075275 ; y=23.095471}
; {x=17.781885 ; y=33.297822}
; {x=24.204081 ; y=8.786708}
; {x=27.081825 ; y=43.434881}
; {x=28.667080 ; y=24.766030}
; {x=41.143668 ; y=7.645582}
; {x=42.275603 ; y=40.960152}
; {x=43.128098 ; y=23.725196}
; {x=7.471282 ; y=24.167679}
; {x=8.014887 ; y=42.005857}
; {x=8.569115 ; y=7.946131}
; {x=21.692961 ; y=32.722105}
; {x=24.968744 ; y=20.083257}
; {x=25.606775 ; y=6.605174}
; {x=26.770500 ; y=43.809358}
; {x=41.341226 ; y=24.916251}
; {x=41.999357 ; y=8.198811}
; {x=42.206787 ; y=41.242868}
; {x=6.381273 ; y=9.042817}
; {x=7.699610 ; y=41.507570}
; {x=9.979754 ; y=25.384336}
; {x=20.301574 ; y=8.260868}
; {x=24.193991 ; y=41.220810}
; {x=27.484534 ; y=23.787595}
; {x=35.016355 ; y=6.347553}
; {x=41.168629 ; y=43.353171}
; {x=42.051751 ; y=29.363387}
; {x=44.362483 ; y=12.821085}
; {x=7.284412 ; y=7.413369}
; {x=8.379009 ; y=21.439482}
; {x=9.468685 ; y=44.983300}
; {x=9.536282 ; y=33.812551}
; {x=22.938530 ; y=7.614850}
; {x=25.553722 ; y=23.347355}
; {x=26.662421 ; y=40.754342}
; {x=40.731205 ; y=7.954894}
; {x=41.874102 ; y=24.441619}
; {x=42.507084 ; y=41.442225}
; {x=7.149216 ; y=41.518683}
; {x=7.859364 ; y=8.759639}
; {x=9.414586 ; y=25.342140}
; {x=22.304994 ; y=43.616315}
; {x=24.177569 ; y=6.200775}
; {x=26.359094 ; y=19.030700}
; {x=27.877647 ; y=32.461366}
; {x=41.507688 ; y=42.376881}
; {x=41.699942 ; y=8.289391}
; {x=42.796893 ; y=25.204774}
|]


(* let answers = [| *)
(*     { x=7.889972 ; y=41.891840 } *)
(*   ; { x=7.962944 ; y=8.364402 } *)
(*   ; { x=8.453344 ; y=25.911798 } *)
(*   ; { x=23.029408 ; y=17.423473 } *)
(*   ; { x=23.889084 ; y=42.828539 } *)
(*   ; { x=25.690336 ; y=5.607460 } *)
(*   ; { x=27.622881 ; y=29.606142 } *)
(*   ; { x=41.525635 ; y=42.020116 } *)
(*   ; { x=41.797632 ; y=8.626947 } *)
(*   ; { x=42.443768 ; y=24.948121 } *)
(*   ; { x=5.715637 ; y=25.202416 } *)
(*   ; { x=8.074719 ; y=43.058660 } *)
(*   ; { x=8.277718 ; y=7.190330 } *)
(*   ; { x=18.350018 ; y=33.249810 } *)
(*   ; { x=18.509894 ; y=17.849659 } *)
(*   ; { x=28.110997 ; y=6.767094 } *)
(*   ; { x=28.338157 ; y=43.429636 } *)
(*   ; { x=33.681455 ; y=25.203705 } *)
(*   ; { x=43.532934 ; y=11.515997 } *)
(*   ; { x=43.612203 ; y=38.539850 } *)
(*   ; { x=6.262825 ; y=25.837951 } *)
(*   ; { x=8.164192 ; y=8.497647 } *)
(*   ; { x=8.551932 ; y=42.043401 } *)
(*   ; { x=19.244621 ; y=24.719640 } *)
(*   ; { x=24.818285 ; y=8.293277 } *)
(*   ; { x=25.246236 ; y=41.970738 } *)
(*   ; { x=32.399779 ; y=25.881076 } *)
(*   ; { x=41.279661 ; y=7.753657 } *)
(*   ; { x=41.990068 ; y=41.583615 } *)
(*   ; { x=44.348898 ; y=23.608841 } *)
(*   ; { x=7.111979 ; y=27.216023 } *)
(*   ; { x=7.837683 ; y=8.217784 } *)
(*   ; { x=8.109633 ; y=42.584909 } *)
(*   ; { x=18.200396 ; y=20.341962 } *)
(*   ; { x=23.945099 ; y=41.103387 } *)
(*   ; { x=26.037466 ; y=7.228249 } *)
(*   ; { x=30.527382 ; y=25.661171 } *)
(*   ; { x=41.155716 ; y=42.372097 } *)
(*   ; { x=42.084583 ; y=8.908960 } *)
(*   ; { x=43.745496 ; y=26.222446 } *)
(*   ; { x=6.575970 ; y=7.570350 } *)
(*   ; { x=6.664866 ; y=23.989087 } *)
(*   ; { x=8.379459 ; y=42.104583 } *)
(*   ; { x=19.269412 ; y=29.580695 } *)
(*   ; { x=19.660019 ; y=10.315329 } *)
(*   ; { x=27.338064 ; y=42.916204 } *)
(*   ; { x=33.100649 ; y=24.119214 } *)
(*   ; { x=33.425814 ; y=6.390014 } *)
(*   ; { x=43.133503 ; y=38.696882 } *)
(*   ; { x=44.805735 ; y=13.374707 } *)
(*   ; { x=6.772498 ; y=36.643213 } *)
(*   ; { x=7.593424 ; y=21.061945 } *)
(*   ; { x=8.574538 ; y=6.794480 } *)
(*   ; { x=16.742413 ; y=44.746700 } *)
(*   ; { x=23.465781 ; y=19.914469 } *)
(*   ; { x=25.765128 ; y=6.500444 } *)
(*   ; { x=26.635593 ; y=33.793165 } *)
(*   ; { x=40.158253 ; y=42.929090 } *)
(*   ; { x=41.821250 ; y=8.904580 } *)
(*   ; { x=42.057135 ; y=25.816986 } *)
(*   ; { x=7.343738 ; y=27.749263 } *)
(*   ; { x=8.137518 ; y=8.831454 } *)
(*   ; { x=9.654973 ; y=42.694418 } *)
(*   ; { x=20.929387 ; y=20.274989 } *)
(*   ; { x=26.369608 ; y=7.280794 } *)
(*   ; { x=26.830219 ; y=43.972222 } *)
(*   ; { x=27.703046 ; y=31.358266 } *)
(*   ; { x=41.844738 ; y=24.529074 } *)
(*   ; { x=42.168456 ; y=8.571790 } *)
(*   ; { x=42.733544 ; y=41.684264 } *)
(*   ; { x=5.865176 ; y=26.476887 } *)
(*   ; { x=7.927685 ; y=8.902030 } *)
(*   ; { x=9.067981 ; y=42.542925 } *)
(*   ; { x=18.536546 ; y=25.973969 } *)
(*   ; { x=23.978887 ; y=7.706320 } *)
(*   ; { x=26.387511 ; y=41.449125 } *)
(*   ; { x=31.280414 ; y=22.559684 } *)
(*   ; { x=41.642598 ; y=8.153210 } *)
(*   ; { x=42.041510 ; y=41.985733 } *)
(*   ; { x=43.636312 ; y=25.921633 } *)
(*   ; { x=8.365686 ; y=43.613277 } *)
(*   ; { x=8.459912 ; y=5.869053 } *)
(*   ; { x=8.986459 ; y=30.725567 } *)
(*   ; { x=8.991749 ; y=18.007418 } *)
(*   ; { x=25.182114 ; y=41.220851 } *)
(*   ; { x=25.489628 ; y=7.802176 } *)
(*   ; { x=25.855047 ; y=24.057023 } *)
(*   ; { x=41.661260 ; y=42.114908 } *)
(*   ; { x=41.843863 ; y=8.754542 } *)
(*   ; { x=41.939553 ; y=25.858659 } *)
(*   ; { x=5.765503 ; y=9.174479 } *)
(*   ; { x=7.799744 ; y=26.211664 } *)
(*   ; { x=8.950655 ; y=42.213016 } *)
(*   ; { x=17.773984 ; y=8.432179 } *)
(*   ; { x=23.726114 ; y=25.437591 } *)
(*   ; { x=26.136835 ; y=41.633577 } *)
(*   ; { x=30.697904 ; y=9.113362 } *)
(*   ; { x=41.155161 ; y=25.389989 } *)
(*   ; { x=42.212685 ; y=41.755407 } *)
(*   ; { x=43.661035 ; y=8.472503 } *)
(* |] *)

(* let answers = [| *)
(*     { x=6.459067 ; y=9.992759 } *)
(*   ; { x=8.293119 ; y=42.603173 } *)
(*   ; { x=9.007245 ; y=27.095454 } *)
(*   ; { x=20.410544 ; y=7.248542 } *)
(*   ; { x=24.553032 ; y=40.578383 } *)
(*   ; { x=25.476166 ; y=21.983094 } *)
(*   ; { x=37.874098 ; y=5.873728 } *)
(*   ; { x=40.669794 ; y=29.991405 } *)
(*   ; { x=41.361270 ; y=43.428237 } *)
(*   ; { x=43.360958 ; y=16.293749 } *)
(*   ; { x=5.875714 ; y=26.694128 } *)
(*   ; { x=7.986062 ; y=8.835413 } *)
(*   ; { x=8.868547 ; y=42.498604 } *)
(*   ; { x=18.429431 ; y=25.062916 } *)
(*   ; { x=24.213084 ; y=7.458751 } *)
(*   ; { x=25.897690 ; y=41.026858 } *)
(*   ; { x=31.551427 ; y=22.033807 } *)
(*   ; { x=41.734173 ; y=42.626160 } *)
(*   ; { x=41.941272 ; y=8.377067 } *)
(*   ; { x=43.426412 ; y=27.029275 } *)
(*   ; { x=6.552633 ; y=42.364018 } *)
(*   ; { x=8.068917 ; y=8.579073 } *)
(*   ; { x=8.157544 ; y=25.153077 } *)
(*   ; { x=18.825712 ; y=39.449107 } *)
(*   ; { x=24.640108 ; y=7.465176 } *)
(*   ; { x=25.457994 ; y=23.200712 } *)
(*   ; { x=31.064705 ; y=41.553674 } *)
(*   ; { x=41.548685 ; y=8.479419 } *)
(*   ; { x=41.920303 ; y=25.232408 } *)
(*   ; { x=43.840840 ; y=41.960489 } *)
(*   ; { x=7.960295 ; y=6.364301 } *)
(*   ; { x=8.386561 ; y=44.056323 } *)
(*   ; { x=9.061780 ; y=19.300500 } *)
(*   ; { x=9.773447 ; y=31.846853 } *)
(*   ; { x=24.163125 ; y=8.641940 } *)
(*   ; { x=25.683088 ; y=42.131916 } *)
(*   ; { x=26.916369 ; y=25.501272 } *)
(*   ; { x=40.986358 ; y=7.383390 } *)
(*   ; { x=42.051808 ; y=40.801094 } *)
(*   ; { x=42.423928 ; y=23.007164 } *)
(*   ; { x=8.150741 ; y=42.132875 } *)
(*   ; { x=8.356475 ; y=25.756277 } *)
(*   ; { x=8.384512 ; y=8.756544 } *)
(*   ; { x=24.320540 ; y=41.088855 } *)
(*   ; { x=24.603930 ; y=23.718900 } *)
(*   ; { x=25.021213 ; y=7.779362 } *)
(*   ; { x=40.900129 ; y=31.640690 } *)
(*   ; { x=41.410125 ; y=44.143882 } *)
(*   ; { x=41.447303 ; y=18.780647 } *)
(*   ; { x=41.651722 ; y=6.137893 } *)
(*   ; { x=6.222231 ; y=26.985800 } *)
(*   ; { x=7.503624 ; y=7.284152 } *)
(*   ; { x=9.236217 ; y=42.699406 } *)
(*   ; { x=16.508902 ; y=17.091574 } *)
(*   ; { x=22.999504 ; y=29.487024 } *)
(*   ; { x=26.775305 ; y=7.866885 } *)
(*   ; { x=27.779421 ; y=42.924438 } *)
(*   ; { x=39.691447 ; y=23.954728 } *)
(*   ; { x=42.463488 ; y=8.229476 } *)
(*   ; { x=42.927914 ; y=40.486914 } *)
(*   ; { x=5.986408 ; y=33.602957 } *)
(*   ; { x=7.590863 ; y=18.469493 } *)
(*   ; { x=11.050628 ; y=44.749883 } *)
(*   ; { x=12.726578 ; y=5.582121 } *)
(*   ; { x=21.356066 ; y=30.571884 } *)
(*   ; { x=26.071063 ; y=15.938940 } *)
(*   ; { x=28.947461 ; y=42.294857 } *)
(*   ; { x=39.784809 ; y=7.234249 } *)
(*   ; { x=41.478391 ; y=24.665139 } *)
(*   ; { x=43.125564 ; y=41.345925 } *)
(*   ; { x=7.107338 ; y=25.687105 } *)
(*   ; { x=7.140105 ; y=42.422553 } *)
(*   ; { x=8.530273 ; y=8.200507 } *)
(*   ; { x=20.444822 ; y=38.870503 } *)
(*   ; { x=22.164373 ; y=21.981021 } *)
(*   ; { x=26.289382 ; y=7.285602 } *)
(*   ; { x=32.232224 ; y=42.518580 } *)
(*   ; { x=39.426052 ; y=24.465567 } *)
(*   ; { x=42.395931 ; y=8.611296 } *)
(*   ; { x=44.416291 ; y=40.118240 } *)
(*   ; { x=7.540303 ; y=41.233276 } *)
(*   ; { x=8.260373 ; y=8.364212 } *)
(*   ; { x=8.724083 ; y=24.750372 } *)
(*   ; { x=23.219558 ; y=44.179063 } *)
(*   ; { x=25.083472 ; y=5.946467 } *)
(*   ; { x=25.917646 ; y=31.921396 } *)
(*   ; { x=26.000089 ; y=18.682414 } *)
(*   ; { x=41.342095 ; y=42.240673 } *)
(*   ; { x=41.920291 ; y=8.499531 } *)
(*   ; { x=42.379191 ; y=25.672369 } *)
(*   ; { x=7.684965 ; y=25.315362 } *)
(*   ; { x=7.853472 ; y=8.485647 } *)
(*   ; { x=8.528413 ; y=42.170148 } *)
(*   ; { x=23.465103 ; y=32.009764 } *)
(*   ; { x=24.282859 ; y=5.936997 } *)
(*   ; { x=24.950119 ; y=18.743635 } *)
(*   ; { x=26.917089 ; y=44.009197 } *)
(*   ; { x=41.390262 ; y=25.385666 } *)
(*   ; { x=41.544192 ; y=8.498395 } *)
(*   ; { x=42.412316 ; y=41.486474 } *)
(* |] *)

(* TODO: divide answer at end maybe? *)

let _ =
  let points = ref [] in
  (try
     while true do
       let line = input_line stdin in
       let [x;y] = Str.split (Str.regexp " ") line in
       points := {x=float_of_string x; y=float_of_string y} :: !points
     done
   with End_of_file -> ()) ;
  if List.length !points <> Array.length answers then
    Printf.printf "1.0\n"
  else
    begin
      List.rev !points |>
      List.mapi (fun i p -> dist answers.(i) p /. 70.7106) |>
      List.fold_left (+.) 0. |>
      fun x -> x /. (float_of_int (Array.length answers)) |>
      Printf.printf "%f\n"
    end

